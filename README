Solomon Abiola
Apirl 11, 2012

The purpose of this program is to demonstrate the capabilities of a TCP/UDP system. While relatively straight forward to implement in Ruby, you run into a problem when you try and create a GUI itnerface, considering the level of robustness of your options out there. For this matter, the GUI employed here is actually the web browser.

Based on how this assignment works initially the client (host) communicates with two servers, in a handshake manner, registers on them and begins to recieve data. (we have confirmed you can unregister with a simple DESTRY IP PORT statement) In order to remove the need for the user to figure out his or her own IP Addr we have incorporated a publiclly known script to figure out ones IP. Once the data has arrived on the client machine it is presented to them in a terminal format. Which is fine depending on the purpose of the application. However, given that in the previous assignments the focus has been on web applications we decided to place the GUI also online.

The way this works is using the Redis server, which in the video that is attached you can see this running in the lower terminal screen. Basically it is set to broadcast Juggernaut (a websocket wrapper) on port 8080 on the local host. There we have part of the Ruby script devoted to feeding this information across this port, now we are able to use the same port - 8080 for the two airlines because we have them on two different channels.  